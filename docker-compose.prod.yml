# docker-compose.prod.yml 
# django-postgres-gunicorn-nginx for deploy 
# with static file on it
version: "3.7"

services:
  web:
    restart: unless-stopped
    container_name: django_nginx
    build: 
      context: .
      dockerfile: Dockerfile.prod

    networks: 
      test_net:
        ipv4_address: 172.29.1.1
  
    command:
      # sleep infinity
      # python manage.py runserver
      #  0.0.0.0:8000
      gunicorn hello_django.wsgi:application --bind 0.0.0.0:8000

    volumes:
      - ./app:/djangonginx
      - static_volume:/djangonginx/web/staticfiles
      - media_volume:/djangonginx/web/mediafiles
    # ports:
      # - 8000:8000
    expose:
      - 8000


    env_file: 
      - ./.env.prod

    depends_on:
      - db

  db:
    restart: unless-stopped
    container_name: postgres_db
    image: postgres:12-alpine
    
    # restart: unless-stopped
    
    # ports:
    #   - 5432:5432

    networks: 
      test_net:
        ipv4_address: 172.29.1.2

    volumes:
      - postgres-data:/var/lib/postgresql/data

    env_file: 
      - ./.env.prod.db
    
      # there are in env.prod.db
    # environment: 
    #   - POSTGRES_DB=hello_django_dev
    #   - POSTGRES_USER=hello_django
    #   - POSTGRES_PASSWORD=supersecretpassword

    
  nginx:
    restart: unless-stopped
    build: ./nginx
    ports: 
      - 80:80
    volumes:
        - static_volume:/djangonginx/web/staticfiles
        - media_volume:/djangonginx/web/mediafiles
    networks: 
      test_net:
        ipv4_address: 172.29.1.3
    depends_on: 
      - web

volumes:
    postgres-data:
    static_volume:
    media_volume:

networks: 
  test_net:
    ipam: 
      driver: default
      config: 
        - subnet: 172.29.1.0/16

